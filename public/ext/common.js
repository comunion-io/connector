// Generated by CoffeeScript 2.3.2
module.exports = {
  rStr: '0123456789qwertyuioplkjhgfdsazxcvbnmQWERTYUIOPLKJHGFDSAZXCVBNM',
  slice: Array.prototype.slice,
  ro: function(ob) {
    var k, str, v;
    str = '';
    if (_.isArray(ob)) {
      return ob.join(',');
    } else if (_.isObject(ob)) {
      for (k in ob) {
        v = ob[k];
        str += `${k}:${v} \n`;
      }
      return str;
    } else {
      return ob;
    }
  },
  isChinese: function(text) {
    var txt;
    if (!_.isString(text)) {
      false;
    }
    if (text) {
      txt = text.replaceAll('’', "").replaceAll('–', '');
    }
    if (escape(txt).indexOf('%u') < 0) {
      return false;
    } else {
      return true;
    }
  },
  del: function(x, ctx = window) {
    var e, it;
    it = ctx[x];
    try {
      delete ctx[x];
    } catch (error) {
      e = error;
      ctx[x] = void 0;
    }
    return it;
  },
  pureText: function(text) {
    return text.replace(/<[^>].*?>/g, "");
  },
  cutText: function(text, length = 30) {
    if (text.length < length) {
      return text;
    } else {
      return text.substr(0, length - 3) + '...';
    }
  },
  adjustText: function(text, length = 30) {
    var c, i, j, len, res;
    if (!text) {
      return '';
    }
    text = text.toString().replace(/<[^>].*?>/g, "");
    i = 0;
    j = 0;
    res = '';
    len = text.length;
    while (length > i && len > j) {
      c = text.substr(j++, 1);
      if (/^[\u4e00-\u9fa5]+$/.test(c) || /^[A-Z]+$/.test(c)) {
        i += 2;
      } else {
        i++;
      }
      res += c;
    }
    if (len > j) {
      res += '...';
    }
    return res;
  },
  opLine: function(str, lang = cf.lang, sp = /<br\/?>/) {
    var lans;
    if (_.isString(str)) {
      lans = str.split(sp);
      if (lang === 'zh') {
        return lans[1] || lans[0];
      } else {
        return lans[0];
      }
    } else {
      return str;
    }
  },
  fileExt: function(name) {
    var it;
    it = name.split(".");
    return it[it.length - 1];
  },
  parseLocalDate: function(time) {
    if (time) {
      if (time.length > 19) {
        time = time.substring(0, 19);
      }
      return new Date((time || "").replace(/-/g, "/").replace(/[TZ]/g, " "));
    }
  },
  parseUrl: function(url = location.search) {
    var it, l, len1, p, res, str;
    res = {};
    if (url.indexOf("?") !== -1) {
      str = url.substr(1).split("&");
      for (l = 0, len1 = str.length; l < len1; l++) {
        it = str[l];
        p = it.split("=");
        res[p[0]] = decodeURIComponent(p[1]);
      }
    }
    return res;
  },
  seqProp: function(obj, pStr, dV) {
    var chain, l, len1, ref, v;
    if (pStr) {
      v = obj;
      ref = pStr.trim().split(".");
      for (l = 0, len1 = ref.length; l < len1; l++) {
        chain = ref[l];
        v = v[chain];
        if (v == null) {
          break;
        }
      }
      if (v != null) {
        return v;
      } else {
        return dV;
      }
    } else {
      return '';
    }
  },
  setSeqProp: function(obj, pStr, v) {
    var chain, d, idx, index, k, l, len, len1, pps;
    pps = pStr.trim().split(".");
    len = pps.length;
    for (idx = l = 0, len1 = pps.length; l < len1; idx = ++l) {
      chain = pps[idx];
      if (chain.indexOf('[') > -1) {
        k = chain;
        chain = k.split('[')[0];
        index = parseInt(k.split('[')[1].split(']')[0]);
        if (_i === (_len - 1)) {
          d = chain ? obj[chain] : obj;
          if (v) {
            d[index] = v;
          } else {
            return d[index];
          }
        } else {
          obj = chain ? obj[chain][index] : obj[index];
        }
      } else if (_.isObject(obj[chain])) {
        obj = obj[chain];
      } else {
        if (idx < len - 1) {
          if (obj[chain] == null) {
            obj[chain] = {};
          }
          obj = obj[chain];
        } else {
          obj[chain] = v;
        }
      }
    }
  },
  delSeqProp: function(obj, pStr) {
    var chain, index, it, l, len1, lk;
    it = pStr.trim().split(".");
    lk = it.pop();
    if (it.length > 0) {
      for (l = 0, len1 = it.length; l < len1; l++) {
        chain = it[l];
        obj = obj[chain];
      }
    }
    if (lk.indexOf('[') > 0) {
      chain = lk.split('[')[0];
      index = parseInt(lk.split('[')[1].split(']')[0]);
      return obj[chain].splice(index, 1);
    } else {
      return delete obj[lk];
    }
  },
  randomInt: function(low, high) {
    return Math.floor(Math.random() * (high - low + 1) + low);
  },
  randomChar: function(len, x = this.rStr) {
    var l, n, ref, ret;
    ret = x.charAt(Math.ceil(Math.random() * 10000000) % x.length);
    for (n = l = 1, ref = len; (1 <= ref ? l <= ref : l >= ref); n = 1 <= ref ? ++l : --l) {
      ret += x.charAt(Math.ceil(Math.random() * 10000000) % x.length);
    }
    return ret;
  },
  delProp: function(x, ctx = window) {
    var e, it;
    it = ctx[x];
    if (!it) {
      return;
    }
    try {
      delete ctx[x];
    } catch (error) {
      e = error;
      ctx[x] = void 0;
    }
    return it;
  },
  getUrlParams: function(url, params) {
    var k, v;
    return url + '?' + ((function() {
      var results;
      results = [];
      for (k in params) {
        v = params[k];
        results.push(`${k}=${v}`);
      }
      return results;
    })()).join('&');
  },
  setSubItem: function(data, prop = 'id') {
    var it, l, len1, p, results;
    results = [];
    for (l = 0, len1 = data.length; l < len1; l++) {
      it = data[l];
      if (it.pid) {
        p = data.findBy(prop, it.pid);
        if (p) {
          if (!p.children) {
            p.children = [];
          }
          p.children.push(it);
          data.splice(_i--, 1);
          results.push(_len--);
        } else {
          results.push(void 0);
        }
      } else {
        results.push(void 0);
      }
    }
    return results;
  },
  findByType: function(items, type) {
    var it, l, len1, results;
    results = [];
    for (l = 0, len1 = items.length; l < len1; l++) {
      it = items[l];
      if (it instanceof type) {
        results.push(it);
      }
    }
    return results;
  },
  serializeObj: function(form) {
    var it, l, len1, o, ref;
    o = {};
    ref = $(form).serializeArray();
    for (l = 0, len1 = ref.length; l < len1; l++) {
      it = ref[l];
      if (o[it.name]) {
        if (!o[it.name].push) {
          o[it.name] = [o[it.name]];
        }
        o[it.name].push(it.value);
      } else {
        if (it.value.length > 0) {
          o[it.name] = it.value;
        }
      }
    }
    return o;
  },
  now: function() {
    return new Date().getTime();
  },
  sum: function(arr, prop) {
    var it, l, len1, sum;
    sum = 0;
    if (arr) {
      for (l = 0, len1 = arr.length; l < len1; l++) {
        it = arr[l];
        sum += +it[prop];
      }
    }
    return sum;
  },
  sumCost: function(costList) {
    var cost, income, it, l, len1;
    income = 0;
    cost = 0;
    if (_.isArray(costList)) {
      for (l = 0, len1 = costList.length; l < len1; l++) {
        it = costList[l];
        if (it.cat === 'spend') {
          cost += +it.fee;
        } else {
          income += +it.fee;
        }
      }
    }
    return [cost - income, cost, income];
  }
};
