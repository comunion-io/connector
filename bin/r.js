// Generated by CoffeeScript 2.3.2
var app, debug, http, normalizePort, onError, onListening, port;

app = require('../app');

debug = require('debug')('node:server');

http = require('http');

global.server = http.createServer(app);

global.io = require('socket.io').listen(server);

normalizePort = function(val) {
  var port;
  port = parseInt(val, 10);
  if (isNaN(port)) { // named pipe
    return val;
  }
  if (port >= 0) { // port number
    return port;
  }
  return false;
};

port = normalizePort(process.env.PORT || '3000');

app.set('port', port);

onError = function(error) {
  var bind;
  log('err....');
  if (error.syscall !== 'listen') {
    throw error;
  }
  bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      return process.exit(1);
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      return process.exit(1);
    default:
      throw error;
  }
};

onListening = function() {
  var addr, bind;
  addr = server.address();
  bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
  //debug 'Listening on ' + bind
  console.log('Listening on ' + bind);
};

server.listen(port);

server.on('error', onError);

server.on('listening', onListening);
